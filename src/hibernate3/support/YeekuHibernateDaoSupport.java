package hibernate3.support;

import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
import org.hibernate.SessionFactory;
import org.hibernate.Session;
import org.hibernate.Query;
import org.hibernate.HibernateException;
import java.sql.SQLException;
import java.util.List;

/**
 * Description:
 * <br/>Copyright (C), 2001-2012, Yeeku.H.Lee
 * <br/>This program is protected by copyright laws.
 * <br/>Program Name:
 * <br/>Date:
 * @author  Yeeku.H.Lee kongyeeku@163.com
 * @version  1.0
 */
public class YeekuHibernateDaoSupport
	extends HibernateDaoSupport
{
	/**
	 * ????hql????????????????
	 * @param hql ??????????hql????
	 * @param offset ??????????????
	 * @param pageSize ????????????????????
	 * @return ????????????????
	 */
	public List findByPage(final String hql, 
		final int offset, final int pageSize)
	{
		//????????HibernateCallback??????????????
		List list = getHibernateTemplate()
			.executeFind(new HibernateCallback()
		{
			//????HibernateCallback??????????????????
			public Object doInHibernate(Session session)
				throws HibernateException, SQLException
			{
				//????Hibernate????????
				List result = session.createQuery(hql)
					.setFirstResult(offset)
					.setMaxResults(pageSize)
					.list();
				return result;
			}
		});
		return list;
	}

	/**
	 * ????hql????????????????
	 * @param hql ??????????hql????
	 * @param value ????hql????????????????????value????????hql??????????
	 * @param offset ??????????????
	 * @param pageSize ????????????????????
	 * @return ????????????????
	 */
	public List findByPage(final String hql , final Object value ,
		final int offset, final int pageSize)
	{
		//????????HibernateCallback??????????????
		List list = getHibernateTemplate()
			.executeFind(new HibernateCallback()
		{
			//????HibernateCallback??????????????????
			public Object doInHibernate(Session session)
				throws HibernateException, SQLException
			{
				//????Hibernate????????
				List result = session.createQuery(hql)
					//??hql????????????
					.setParameter(0, value) 
					.setFirstResult(offset)
					.setMaxResults(pageSize)
					.list();
				return result;
			}
		});
		return list;
	}

	/**
	 * ????hql????????????????
	 * @param hql ??????????hql????
	 * @param values ????hql??????????????????????values????????hql??????????
	 * @param offset ??????????????
	 * @param pageSize ????????????????????
	 * @return ????????????????
	 */
	public List findByPage(final String hql, final Object[] values,
		final int offset, final int pageSize)
	{
		//????????HibernateCallback??????????????
		List list = getHibernateTemplate()
			.executeFind(new HibernateCallback()
		{
			//????HibernateCallback??????????????????
			public Object doInHibernate(Session session)
				throws HibernateException, SQLException
			{
				//????Hibernate????????
				Query query = session.createQuery(hql);
				//??hql????????????
				for (int i = 0 ; i < values.length ; i++)
				{
					query.setParameter( i, values[i]);
				}
				List result = query.setFirstResult(offset)
					.setMaxResults(pageSize)
					.list();
				return result;
			}
		});
		return list;
	}
}